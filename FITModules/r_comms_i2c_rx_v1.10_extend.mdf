<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
/***********************************************************************************************************************
* DISCLAIMER
* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
* applicable laws, including copyright laws. 
* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, 
* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS 
* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
* this software. By using this software, you agree to the additional terms and conditions found by accessing the 
* following link:
* http://www.renesas.com/disclaimer
*
* Copyright (C) 2021 Renesas Electronics Corporation. All rights reserved.
***********************************************************************************************************************/
/***********************************************************************************************************************
  Purpose: Module Description File (MDF) Example (Schema Version 2.0)
           This is a description of a sample FIT module configuration file
***********************************************************************************************************************/
-->
<module xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="2.0" xs:noNamespaceSchemaLocation="schema_mdf_2.00.xsd">
  <fileVersion>1.00</fileVersion>
  <formatVersion>2.00</formatVersion>
  <fileTemplate></fileTemplate>
  <configuration>
    <property id="RM_COMMS_I2C_CFG_PARAM_CHECKING_ENABLE" display="Parameter Checking" default="BSP_CFG_PARAM_CHECKING_ENABLE" type="combobox">
      <option id="RM_COMMS_I2C_CFG_PARAM_CHECKING_ENABLE.BSP_CFG_PARAM_CHECKING_ENABLE" display="System Default" value="BSP_CFG_PARAM_CHECKING_ENABLE" />
      <option id="RM_COMMS_I2C_CFG_PARAM_CHECKING_ENABLE.0" display="Disabled" value="0" />
      <option id="RM_COMMS_I2C_CFG_PARAM_CHECKING_ENABLE.1" display="Enabled" value="1" />
      <description>Select whether to include parameter checking in the code.
"Disabled": Compiles out parameter checking.
"Enabled": Includes parameter checking.
"System Default": Sets this to "BSP_CFG_PARAM_CHECKING_ENABLE"</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS_NUM_MAX" display="Number of I2C Shared Buses" default="1" type="combobox">
      <option id="COMMS_I2C_CFG_BUS_NUM_MAX.0" display="Unused" value="0" />
      <option id="COMMS_I2C_CFG_BUS_NUM_MAX.1" display="1" value="1" />
      <option id="COMMS_I2C_CFG_BUS_NUM_MAX.2" display="2" value="2" />
      <option id="COMMS_I2C_CFG_BUS_NUM_MAX.3" display="3" value="3" />
      <option id="COMMS_I2C_CFG_BUS_NUM_MAX.4" display="4" value="4" />
      <option id="COMMS_I2C_CFG_BUS_NUM_MAX.5" display="5" value="5" />
      <description>Set the number of I2C Shared Buses.
[Note]: Up to five I2C Shared Buses can be controlled.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE_NUM_MAX" display="Number of I2C Communication Devices" default="1" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE_NUM_MAX.0" display="Unused" value="0" />
      <option id="COMMS_I2C_CFG_DEVICE_NUM_MAX.1" display="1" value="1" />
      <option id="COMMS_I2C_CFG_DEVICE_NUM_MAX.2" display="2" value="2" />
      <option id="COMMS_I2C_CFG_DEVICE_NUM_MAX.3" display="3" value="3" />
      <option id="COMMS_I2C_CFG_DEVICE_NUM_MAX.4" display="4" value="4" />
      <option id="COMMS_I2C_CFG_DEVICE_NUM_MAX.5" display="5" value="5" />
      <description>Set the number of I2C devices.
[Note]: Up to five I2C devices can be controlled.</description>
    </property>
    <property id="COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE" display="Blocking operation supporting with RTOS" default="0" type="combobox">
      <option id="COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.DISABLED" display="Disabled" value="0" />
      <option id="COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED" display="Enabled" value="1" />
      <description>Select whether to supporting the blocking operation.
The blocking operation is effective available when using RTOS.
"Disabled": Perform with non-blobking opeartion.
"Enabled": Perform with blocking operation.</description>
    </property>
    <property id="COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE" display="Bus lock operation supporting with RTOS" default="0" type="combobox">
      <option id="COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE.DISABLED" display="Disabled" value="0" />
      <option id="COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE.ENABLED" display="Enabled" value="1" />
      <constraint display="When blocking operaten is supported" actionOnFail="disable">"${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE}" == "${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}"</constraint>
      <description>Select whether to supporting the bus lock operation.
The bus lock operation is effective available when using RTOS and enabled a blocking operation.
"Disabled": Disbled a bus lock operation.
"Enabled": Enabled a bus lock operation.</description>
    </property>

    <!-- COMMS I2C Shared Bus -->
    <property id="COMMS_I2C_CFG_BUS0_DRIVER_TYPE" display="I2C Driver Type for I2C Shared Bus0" default="COMMS_DRIVER_NONE" type="combobox">
      <option id="COMMS_I2C_CFG_BUS0_DRIVER_TYPE.COMMS_DRIVER_I2C" display="RIIC" value="COMMS_DRIVER_I2C" />
      <option id="COMMS_I2C_CFG_BUS0_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C" display="SCI IIC" value="COMMS_DRIVER_SCI_I2C" />
      <option id="COMMS_I2C_CFG_BUS0_DRIVER_TYPE.COMMS_DRIVER_NONE" display="Not selected" value="COMMS_DRIVER_NONE" />
      <constraint display="When number of I2C buses is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <description>Set the driver type (see below) to be used for each I2C Shared Bus.
- When using RX FIT RIIC, set this to "RX FIT RIIC".
- When using RX FIT SCI IIC, set this to "RX FIT SCI IIC".</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS0_DRIVER_CH" display="Channel No. for I2C Shared Bus0" default="0" type="textbox">
      <constraint display="When number of I2C buses is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS0_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS0_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS0_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS0_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <description>Specify the Channel No. of the I2C bus for I2C Shared Bus0.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS0_TIMEOUT" display="Timeout for the bus lock of I2C Shared Bus0" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C buses is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS0_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS0_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS0_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS0_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="when RTOS Bus Lock Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_BUS0_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_BUS0_TIMEOUT}))</constraint>
      <description>Specify the timeout for the bus lock of the I2C bus for I2C Shared Bus0.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS1_DRIVER_TYPE" display="I2C Driver Type for I2C Shared Bus1" default="COMMS_DRIVER_NONE" type="combobox">
      <option id="COMMS_I2C_CFG_BUS1_DRIVER_TYPE.COMMS_DRIVER_I2C" display="RIIC" value="COMMS_DRIVER_I2C" />
      <option id="COMMS_I2C_CFG_BUS1_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C" display="SCI IIC" value="COMMS_DRIVER_SCI_I2C" />
      <option id="COMMS_I2C_CFG_BUS1_DRIVER_TYPE.COMMS_DRIVER_NONE" display="Not selected" value="COMMS_DRIVER_NONE" />
      <constraint display="When number of I2C buses is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <description>Set the driver type (see below) to be used for I2C Shared Bus1.
- When using RX FIT RIIC, set this to "RX FIT RIIC".
- When using RX FIT SCI IIC, set this to "RX FIT SCI IIC".</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS1_DRIVER_CH" display="Channel No. for I2C Shared Bus1" default="0" type="textbox">
      <constraint display="When number of I2C buses is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS1_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS1_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS1_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS1_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <description>Specify the Channel No. of the I2C bus for I2C Shared Bus1.
- When using, specify the Channel No. of the I2C bus.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS1_TIMEOUT" display="Timeout for the bus lock of I2C Shared Bus1" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C buses is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS1_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS1_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS1_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS1_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="when RTOS Bus Lock Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_BUS1_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_BUS1_TIMEOUT}))</constraint>
      <description>Specify the timeout for the bus lock of the I2C bus for I2C Shared Bus1.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS2_DRIVER_TYPE" display="I2C Driver Type for I2C Shared Bus2" default="COMMS_DRIVER_NONE" type="combobox">
      <option id="COMMS_I2C_CFG_BUS2_DRIVER_TYPE.COMMS_DRIVER_I2C" display="RIIC" value="COMMS_DRIVER_I2C" />
      <option id="COMMS_I2C_CFG_BUS2_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C" display="SCI IIC" value="COMMS_DRIVER_SCI_I2C" />
      <option id="COMMS_I2C_CFG_BUS2_DRIVER_TYPE.COMMS_DRIVER_NONE" display="Not selected" value="COMMS_DRIVER_NONE" />
      <constraint display="When number of I2C buses is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <description>Set the driver type (see below) to be used for I2C Shared Bus2.
- When using RX FIT RIIC, set this to "RX FIT RIIC".
- When using RX FIT SCI IIC, set this to "RX FIT SCI IIC".</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS2_DRIVER_CH" display="Channel No. for I2C Shared Bus2" default="0" type="textbox">
      <constraint display="When number of I2C buses is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS2_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS2_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS2_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS2_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <description>Specify the Channel No. of the I2C bus for I2C Shared Bus2.
- When using, specify the Channel No. of the I2C bus.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS2_TIMEOUT" display="Timeout for the bus lock of I2C Shared Bus2" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C buses is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS2_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS2_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS2_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS2_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="when RTOS Bus Lock Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_BUS2_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_BUS2_TIMEOUT}))</constraint>
      <description>Specify the timeout for the bus lock of the I2C bus for I2C Shared Bus2.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS3_DRIVER_TYPE" display="I2C Driver Type for I2C Shared Bus3" default="COMMS_DRIVER_NONE" type="combobox">
      <option id="COMMS_I2C_CFG_BUS3_DRIVER_TYPE.COMMS_DRIVER_I2C" display="RIIC" value="COMMS_DRIVER_I2C" />
      <option id="COMMS_I2C_CFG_BUS3_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C" display="SCI IIC" value="COMMS_DRIVER_SCI_I2C" />
      <option id="COMMS_I2C_CFG_BUS3_DRIVER_TYPE.COMMS_DRIVER_NONE" display="Not selected" value="COMMS_DRIVER_NONE" />
      <constraint display="When number of I2C buses is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <description>Set the driver type (see below) to be used for I2C Shared Bus3.
- When using RX FIT RIIC, set this to "RX FIT RIIC".
- When using RX FIT SCI IIC, set this to "RX FIT SCI IIC".</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS3_DRIVER_CH" display="Channel No. for I2C Shared Bus3" default="0" type="textbox">
      <constraint display="When number of I2C buses is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS3_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS3_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS3_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS3_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <description>Specify the Channel No. of the I2C bus for I2C Shared Bus3.
- When using, specify the Channel No. of the I2C bus.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS3_TIMEOUT" display="Timeout for the bus lock of I2C Shared Bus3" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C buses is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS3_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS3_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS3_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS3_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="when RTOS Bus Lock Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_BUS3_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_BUS3_TIMEOUT}))</constraint>
      <description>Specify the timeout for the bus lock of the I2C bus for I2C Shared Bus3.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS4_DRIVER_TYPE" display="I2C Driver Type for I2C Shared Bus4" default="COMMS_DRIVER_NONE" type="combobox">
      <option id="COMMS_I2C_CFG_BUS4_DRIVER_TYPE.COMMS_DRIVER_I2C" display="RIIC" value="COMMS_DRIVER_I2C" />
      <option id="COMMS_I2C_CFG_BUS4_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C" display="SCI IIC" value="COMMS_DRIVER_SCI_I2C" />
      <option id="COMMS_I2C_CFG_BUS4_DRIVER_TYPE.COMMS_DRIVER_NONE" display="Not selected" value="COMMS_DRIVER_NONE" />
      <constraint display="When number of I2C buses is 5" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <description>Set the driver type (see below) to be used for I2C Shared Bus4.
- When using RX FIT RIIC, set this to "RX FIT RIIC".
- When using RX FIT SCI IIC, set this to "RX FIT SCI IIC".</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS4_DRIVER_CH" display="Channel No. for I2C Shared Bus4" default="0" type="textbox">
      <constraint display="When number of I2C buses is 5" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS4_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS4_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS4_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS4_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <description>Specify the Channel No. of the I2C bus for I2C Shared Bus4.
- When using, specify the Channel No. of the I2C bus.</description>
    </property>
    <property id="COMMS_I2C_CFG_BUS4_TIMEOUT" display="Timeout for the bus lock of I2C Shared Bus4" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C buses is 5" actionOnFail="disable">
        "${COMMS_I2C_CFG_BUS_NUM_MAX}" == "${COMMS_I2C_CFG_BUS_NUM_MAX.5}"
      </constraint>
      <constraint display="When I2C or SCI I2C is selected as the I2C driver type" actionOnFail="disable">"${COMMS_I2C_CFG_BUS4_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS4_DRIVER_TYPE.COMMS_DRIVER_I2C}" || "${COMMS_I2C_CFG_BUS4_DRIVER_TYPE}" == "${COMMS_I2C_CFG_BUS4_DRIVER_TYPE.COMMS_DRIVER_SCI_I2C}"</constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="when RTOS Bus Lock Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BUS_LOCK_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_BUS4_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_BUS4_TIMEOUT}))</constraint>
      <description>Specify the timeout for the bus lock of the I2C bus for I2C Shared Bus4.</description>
    </property>

    <!-- COMMS I2C Device -->
    <property id="COMMS_I2C_CFG_DEVICE0_BUS_CH" display="I2C Shared Bus No. for I2C Communication Device0" default="g_comms_i2c_bus0_extended_cfg" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE0_BUS_CH.0" display="I2C Shared Bus0" value="g_comms_i2c_bus0_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE0_BUS_CH.1" display="I2C Shared Bus1" value="g_comms_i2c_bus1_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE0_BUS_CH.2" display="I2C Shared Bus2" value="g_comms_i2c_bus2_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE0_BUS_CH.3" display="I2C Shared Bus3" value="g_comms_i2c_bus3_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE0_BUS_CH.4" display="I2C Shared Bus4" value="g_comms_i2c_bus4_extended_cfg" />
      <constraint display="When number of I2C devices is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device0.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE0_SLAVE_ADDR" display="Slave address for I2C Communication Device0" default="0x00" type="textbox">
      <constraint display="When number of I2C devices is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device0.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE0_ADDR_MODE" display="Address mode for I2C Communication Device0" default="1" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE0_ADDR_MODE.COMMS_I2C_ADDR_7BIT" display="7bit address mode" value="1" />
      <constraint display="When number of I2C devices is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address mode of the I2C Communication Device0.
- RX I2C FIT module supports only 7bit address mode"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE0_CALLBACK_ENABLE" display="Enable callback function for I2C Communication Device0" default="0" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE0_CALLBACK_ENABLE.0" display="Disabled" value="0" />
      <option id="COMMS_I2C_CFG_DEVICE0_CALLBACK_ENABLE.1" display="Enabled" value="1" />
      <constraint display="When number of I2C devices is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Enalbe callback function of the I2C Communication Device0.
- When Disabled, Don't call the Callback function"
- When Enabled, Call the Callback function"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE0_CALLBACK" display="Callback function for I2C Communication Device0" default="comms_i2c_user_callback0" type="textbox">
      <constraint display="When number of I2C devices is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when callback function is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_DEVICE0_CALLBACK_ENABLE} == ${COMMS_I2C_CFG_DEVICE0_CALLBACK_ENABLE.1}</constraint>
      <constraint display="Must not be empty">"" != "${COMMS_I2C_CFG_DEVICE0_CALLBACK}"</constraint>
      <description>Specify the Callback function name of the I2C Communication Device0.
- When using NULL, Don't call the Callback funciton</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE0_BLOCKING_TIMEOUT" display="Timeout for the blocking bus of I2C Communication Device0" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C devices is 1 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.1}" 
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_DEVICE0_BLOCKING_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_DEVICE0_BLOCKING_TIMEOUT}))</constraint>
      <description>Specify the timeout for the blocking bus of the I2C Communication Device0.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE1_BUS_CH" display="I2C Shared Bus No. for I2C Communication Device1" default="g_comms_i2c_bus0_extended_cfg" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE1_BUS_CH.0" display="I2C Shared Bus0" value="g_comms_i2c_bus0_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE1_BUS_CH.1" display="I2C Shared Bus1" value="g_comms_i2c_bus1_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE1_BUS_CH.2" display="I2C Shared Bus2" value="g_comms_i2c_bus2_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE1_BUS_CH.3" display="I2C Shared Bus3" value="g_comms_i2c_bus3_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE1_BUS_CH.4" display="I2C Shared Bus4" value="g_comms_i2c_bus4_extended_cfg" />
      <constraint display="When number of I2C devices is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device1.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE1_SLAVE_ADDR" display="Slave address for I2C Communication Device1" default="0x00" type="textbox">
      <constraint display="When number of I2C devices is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device1.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE1_ADDR_MODE" display="Address mode for I2C Communication Device1" default="1" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE1_ADDR_MODE.COMMS_I2C_ADDR_7BIT" display="7bit address mode" value="1" />
      <constraint display="When number of I2C devices is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address mode of the I2C Communication Device1.
- RX I2C FIT module supports only 7bit address mode"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE1_CALLBACK_ENABLE" display="Enable callback function for I2C Communication Device1" default="0" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE1_CALLBACK_ENABLE.0" display="Disabled" value="0" />
      <option id="COMMS_I2C_CFG_DEVICE1_CALLBACK_ENABLE.1" display="Enabled" value="1" />
      <constraint display="When number of I2C devices is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Enalbe callback function of the I2C Communication Device1.
- When Disabled, Don't call the Callback function"
- When Enabled, Call the Callback function"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE1_CALLBACK" display="Callback function for I2C Communication Device1" default="comms_i2c_user_callback1" type="textbox">
      <constraint display="When number of I2C devices is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when callback function is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_DEVICE1_CALLBACK_ENABLE} == ${COMMS_I2C_CFG_DEVICE1_CALLBACK_ENABLE.1}</constraint>
      <constraint display="Must not be empty">"" != "${COMMS_I2C_CFG_DEVICE1_CALLBACK}"</constraint>
      <description>Specify the Callback function name of the I2C Communication Device1.
- When using NULL, Don't call the Callback funciton</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE1_BLOCKING_TIMEOUT" display="Timeout for the blocking bus of I2C Communication Device1" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C devices is 2 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.2}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_DEVICE1_BLOCKING_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_DEVICE1_BLOCKING_TIMEOUT}))</constraint>
      <description>Specify the timeout for the blocking bus of the I2C Communication Device1.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE2_BUS_CH" display="I2C Shared Bus No. for I2C Communication Device2" default="g_comms_i2c_bus0_extended_cfg" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE2_BUS_CH.0" display="I2C Shared Bus0" value="g_comms_i2c_bus0_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE2_BUS_CH.1" display="I2C Shared Bus1" value="g_comms_i2c_bus1_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE2_BUS_CH.2" display="I2C Shared Bus2" value="g_comms_i2c_bus2_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE2_BUS_CH.3" display="I2C Shared Bus3" value="g_comms_i2c_bus3_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE2_BUS_CH.4" display="I2C Shared Bus4" value="g_comms_i2c_bus4_extended_cfg" />
      <constraint display="When number of I2C devices is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Commumication Device2.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE2_SLAVE_ADDR" display="Slave address for I2C Communication Device2" default="0x00" type="textbox">
      <constraint display="When number of I2C devices is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device2.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE2_ADDR_MODE" display="Address mode for I2C Communication Device2" default="1" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE2_ADDR_MODE.COMMS_I2C_ADDR_7BIT" display="7bit address mode" value="1" />
      <constraint display="When number of I2C devices is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address mode of the I2C Communication Device2.
- RX I2C FIT module supports only 7bit address mode"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE2_CALLBACK_ENABLE" display="Enable callback function for I2C Communication Device2" default="0" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE2_CALLBACK_ENABLE.0" display="Disabled" value="0" />
      <option id="COMMS_I2C_CFG_DEVICE2_CALLBACK_ENABLE.1" display="Enabled" value="1" />
      <constraint display="When number of I2C devices is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Enalbe callback function of the I2C Communication Device2.
- When Disabled, Don't call the Callback function"
- When Enabled, Call the Callback function"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE2_CALLBACK" display="Callback function for I2C Communication Device2" default="comms_i2c_user_callback2" type="textbox">
      <constraint display="When number of I2C devices is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when callback function is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_DEVICE2_CALLBACK_ENABLE} == ${COMMS_I2C_CFG_DEVICE2_CALLBACK_ENABLE.1}</constraint>
      <constraint display="Must not be empty">"" != "${COMMS_I2C_CFG_DEVICE2_CALLBACK}"</constraint>
      <description>Specify the Callback function name of the I2C Communication Device2.
- When using NULL, Don't call the Callback funciton</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE2_BLOCKING_TIMEOUT" display="Timeout for the blocking bus of I2C Communication Device2" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C devices is 3 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.3}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_DEVICE2_BLOCKING_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_DEVICE2_BLOCKING_TIMEOUT}))</constraint>
      <description>Specify the timeout for the blocking bus of the I2C Communication Device2.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE3_BUS_CH" display="I2C Shared Bus No. for I2C Communication Device3" default="g_comms_i2c_bus0_extended_cfg" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE3_BUS_CH.0" display="I2C Shared Bus0" value="g_comms_i2c_bus0_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE3_BUS_CH.1" display="I2C Shared Bus1" value="g_comms_i2c_bus1_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE3_BUS_CH.2" display="I2C Shared Bus2" value="g_comms_i2c_bus2_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE3_BUS_CH.3" display="I2C Shared Bus3" value="g_comms_i2c_bus3_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE3_BUS_CH.4" display="I2C Shared Bus4" value="g_comms_i2c_bus4_extended_cfg" />
      <constraint display="When number of I2C devices is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device3.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE3_SLAVE_ADDR" display="Slave address for I2C Communication Device3" default="0x00" type="textbox">
      <constraint display="When number of I2C devices is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device3.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE3_ADDR_MODE" display="Address mode for I2C Communication Device3" default="1" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE3_ADDR_MODE.COMMS_I2C_ADDR_7BIT" display="7bit address mode" value="1" />
      <constraint display="When number of I2C devices is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address mode of the I2C Communication Device3.
- RX I2C FIT module supports only 7bit address mode"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE3_CALLBACK_ENABLE" display="Enable callback function for I2C Communication Device3" default="0" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE3_CALLBACK_ENABLE.0" display="Disabled" value="0" />
      <option id="COMMS_I2C_CFG_DEVICE3_CALLBACK_ENABLE.1" display="Enabled" value="1" />
      <constraint display="When number of I2C devices is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Enalbe callback function of the I2C Communication Device3.
- When Disabled, Don't call the Callback function"
- When Enabled, Call the Callback function"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE3_CALLBACK" display="Callback function for I2C Communication Device3" default="comms_i2c_user_callback3" type="textbox">
      <constraint display="When number of I2C devices is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when callback function is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_DEVICE3_CALLBACK_ENABLE} == ${COMMS_I2C_CFG_DEVICE3_CALLBACK_ENABLE.1}</constraint>
      <constraint display="Must not be empty">"" != "${COMMS_I2C_CFG_DEVICE3_CALLBACK}"</constraint>
      <description>Specify the Callback function name of the I2C Communication Device3.
- When using NULL, Don't call the Callback funciton</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE3_BLOCKING_TIMEOUT" display="Timeout for the blocking bus of I2C Communication Device3" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C devices is 4 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.4}"
        || "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_DEVICE3_BLOCKING_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_DEVICE3_BLOCKING_TIMEOUT}))</constraint>
      <description>Specify the timeout for the blocking bus of the I2C Communication Device3.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE4_BUS_CH" display="I2C Shared Bus No. for I2C Communication Device4" default="g_comms_i2c_bus0_extended_cfg" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE4_BUS_CH.0" display="I2C Shared Bus0" value="g_comms_i2c_bus0_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE4_BUS_CH.1" display="I2C Shared Bus1" value="g_comms_i2c_bus1_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE4_BUS_CH.2" display="I2C Shared Bus2" value="g_comms_i2c_bus2_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE4_BUS_CH.3" display="I2C Shared Bus3" value="g_comms_i2c_bus3_extended_cfg" />
      <option id="COMMS_I2C_CFG_DEVICE4_BUS_CH.4" display="I2C Shared Bus4" value="g_comms_i2c_bus4_extended_cfg" />
      <constraint display="When number of I2C devices is 5 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device4.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE4_SLAVE_ADDR" display="Slave address for I2C Communication Device4" default="0x00" type="textbox">
      <constraint display="When number of I2C devices is 5 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address of the I2C Communication Device4.</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE4_ADDR_MODE" display="Address mode for I2C Communication Device4" default="1" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE4_ADDR_MODE.COMMS_I2C_ADDR_7BIT" display="7bit address mode" value="1" />
      <constraint display="When number of I2C devices is 5 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Slave address mode of the I2C Communication Device4.
- RX I2C FIT module supports only 7bit address mode"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE4_CALLBACK_ENABLE" display="Enable callback function for I2C Communication Device4" default="0" type="combobox">
      <option id="COMMS_I2C_CFG_DEVICE4_CALLBACK_ENABLE.0" display="Disabled" value="0" />
      <option id="COMMS_I2C_CFG_DEVICE4_CALLBACK_ENABLE.1" display="Enabled" value="1" />
      <constraint display="When number of I2C devices is 5 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <description>Specify the Enalbe callback function of the I2C Communication Device4.
- When Disabled, Don't call the Callback function"
- When Enabled, Call the Callback function"</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE4_CALLBACK" display="Callback function for I2C Communication Device4" default="comms_i2c_user_callback4" type="textbox">
      <constraint display="When number of I2C devices is 5 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when callback function is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_DEVICE4_CALLBACK_ENABLE} == ${COMMS_I2C_CFG_DEVICE4_CALLBACK_ENABLE.1}</constraint>
      <constraint display="Must not be empty">"" != "${COMMS_I2C_CFG_DEVICE4_CALLBACK}"</constraint>
      <description>Specify the Callback function name of the I2C Communication Device4.
- When using NULL, Don't call the Callback funciton</description>
    </property>
    <property id="COMMS_I2C_CFG_DEVICE4_BLOCKING_TIMEOUT" display="Timeout for the blocking bus of I2C Communication Device4" default="0xFFFFFFFF" type="textbox">
      <constraint display="When number of I2C devices is 5 or more" actionOnFail="disable">
        "${COMMS_I2C_CFG_DEVICE_NUM_MAX}" == "${COMMS_I2C_CFG_DEVICE_NUM_MAX.5}"
      </constraint>
      <constraint display="when RTOS Blocking Support is enabled only" actionOnFail="disable">${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE} == ${COMMS_I2C_CFG_RTOS_BLOCKING_SUPPORT_ENABLE.ENABLED}</constraint>
      <constraint display="Must be integer value (0x00 - 0xFFFFFFFF)">((0x00 &lt;= ${COMMS_I2C_CFG_DEVICE4_BLOCKING_TIMEOUT}) &amp;&amp; (0xFFFFFFFF &gt;= ${COMMS_I2C_CFG_DEVICE4_BLOCKING_TIMEOUT}))</constraint>
      <description>Specify the timeout for the blocking bus of the I2C Communication Device4.</description>
    </property>
  </configuration>
</module>